version: 2.1

workflows:
  version: 2.1
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
          context:
            - "github"
            - "Docker Hub"

commands:
  setup:
    steps:
      - run:
          name: Prepare for multi arch build (setup qemu)
          command: |
            sudo apt-get update
            sudo apt-get install -y qemu-user-static binfmt-support
      - run:
          name: Check versions
          command: |
            qemu-arm-static --version
            qemu-aarch64-static --version
            update-binfmts --version 
      - run:
          name: Create multi arch docker image builder
          command: |
            docker buildx create --name multi-arch-builder
            docker buildx use multi-arch-builder
            docker buildx inspect --bootstrap
      - checkout
      - run:
          name: Clone gitea repository
          command: |
            echo "Using tag: ${CIRCLE_TAG:-main}"
            git clone --depth 1 -b ${CIRCLE_TAG:-main} https://github.com/go-gitea/gitea.git
            echo "gitea version: $(git describe --tags --always | sed 's/-/+/' | sed 's/^v//')"
      # @see: https://gitlab.alpinelinux.org/alpine/infra/infra/-/issues/8087
      # @see: https://github.com/alpinelinux/docker-alpine/issues/98
      - run:
          name: Alpine download workaround
          command: |
            sed -i "s|RUN apk|RUN sed -i 's/https/http/' /etc/apk/repositories \nRUN apk|g" gitea/Dockerfile
      - run:
          name: Specify platform for make
          command: |
            sed -i "s|make clean-all build|make -e LINUX_ARCHS=linux/arm-6 clean-all build|g" gitea/Dockerfile
jobs:
  build:
    machine: true
    resource_class: large
    steps:
      - setup
      - run:
          name: Build docker image
          command: |
            cd gitea
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            TAG_NAME="${DOCKER_USER}/gitea-base"
            if [ "${CIRCLE_TAG}" != "" ]; then
              TAG_NAME+=":${CIRCLE_TAG}"
            fi
            docker buildx build \
              --platform linux/arm/v6 \
              --tag ${TAG_NAME} \
              --push .
